import { STORAGE_CONFIG } from '../utils/constants'\n\nexport function useStorage() {\n  const getStorageKey = (key) => `${STORAGE_CONFIG.PREFIX}-${key}`\n  \n  const saveData = (key, data) => {\n    try {\n      const storageKey = getStorageKey(key)\n      localStorage.setItem(storageKey, JSON.stringify(data))\n      return true\n    } catch (error) {\n      console.error(`Failed to save ${key} to localStorage:`, error)\n      return false\n    }\n  }\n  \n  const loadData = (key) => {\n    try {\n      const storageKey = getStorageKey(key)\n      const saved = localStorage.getItem(storageKey)\n      return saved ? JSON.parse(saved) : null\n    } catch (error) {\n      console.error(`Failed to load ${key} from localStorage:`, error)\n      return null\n    }\n  }\n  \n  const removeData = (key) => {\n    try {\n      const storageKey = getStorageKey(key)\n      localStorage.removeItem(storageKey)\n      return true\n    } catch (error) {\n      console.error(`Failed to remove ${key} from localStorage:`, error)\n      return false\n    }\n  }\n  \n  const clearAll = () => {\n    try {\n      Object.keys(localStorage)\n        .filter(key => key.startsWith(STORAGE_CONFIG.PREFIX))\n        .forEach(key => localStorage.removeItem(key))\n      return true\n    } catch (error) {\n      console.error('Failed to clear localStorage:', error)\n      return false\n    }\n  }\n  \n  return {\n    saveData,\n    loadData,\n    removeData,\n    clearAll\n  }\n}"