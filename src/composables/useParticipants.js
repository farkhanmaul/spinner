import { ref } from 'vue'\nimport { useToast } from 'vue-toastification'\nimport { useStorage } from './useStorage'\nimport { PARTICIPANT_CONFIG } from '../utils/constants'\nimport { validateParticipant } from '../utils/validation'\n\nexport function useParticipants() {\n  const toast = useToast()\n  const { saveData, loadData } = useStorage()\n  \n  const participants = ref([])\n  const newParticipant = ref('')\n  \n  const addParticipant = () => {\n    const validation = validateParticipant(newParticipant.value, participants.value)\n    \n    if (!validation.isValid) {\n      toast.error(validation.message)\n      return false\n    }\n    \n    if (participants.value.length >= PARTICIPANT_CONFIG.MAX_PARTICIPANTS) {\n      toast.error(`Maximum ${PARTICIPANT_CONFIG.MAX_PARTICIPANTS} participants allowed`)\n      return false\n    }\n    \n    const participant = {\n      name: validation.name,\n      id: Date.now()\n    }\n    \n    participants.value.push(participant)\n    newParticipant.value = ''\n    toast.success(`${participant.name} added!`)\n    saveParticipants()\n    \n    return true\n  }\n  \n  const removeParticipant = (index) => {\n    const removed = participants.value.splice(index, 1)[0]\n    toast.info(`${removed.name} removed`)\n    saveParticipants()\n  }\n  \n  const clearAll = () => {\n    if (confirm('Are you sure you want to remove all participants?')) {\n      participants.value = []\n      toast.info('All participants cleared')\n      saveParticipants()\n      return true\n    }\n    return false\n  }\n  \n  const saveParticipants = () => {\n    saveData('participants', participants.value)\n  }\n  \n  const loadParticipants = () => {\n    const saved = loadData('participants')\n    if (saved) {\n      participants.value = saved\n    }\n  }\n  \n  return {\n    participants,\n    newParticipant,\n    addParticipant,\n    removeParticipant,\n    clearAll,\n    loadParticipants\n  }\n}"